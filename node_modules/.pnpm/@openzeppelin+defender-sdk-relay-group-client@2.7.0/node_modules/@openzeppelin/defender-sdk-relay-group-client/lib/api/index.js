"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RelayGroupClient = void 0;
// add methods to add relayers to group, remove, pause, resume, etc.
const defender_sdk_base_client_1 = require("@openzeppelin/defender-sdk-base-client");
class RelayGroupClient extends defender_sdk_base_client_1.BaseApiClient {
    getPoolId() {
        return process.env.DEFENDER_POOL_ID || 'us-west-2_94f3puJWv';
    }
    getPoolClientId() {
        return process.env.DEFENDER_POOL_CLIENT_ID || '40e58hbc7pktmnp9i26hh5nsav';
    }
    getApiUrl() {
        return process.env.DEFENDER_API_URL || 'https://defender-api.openzeppelin.com/v2/';
    }
    async get(id) {
        return this.apiCall(async (api) => {
            return await api.get(`/relayer-groups/${id}`);
        });
    }
    async list() {
        return this.apiCall(async (api) => {
            return await api.get('/relayer-groups');
        });
    }
    async create(relayerGroup) {
        return this.apiCall(async (api) => {
            return await api.post('/relayer-groups', relayerGroup);
        });
    }
    async update(id, relayerUpdateParams) {
        return this.apiCall(async (api) => {
            return await api.put(`/relayer-groups/${id}`, relayerUpdateParams);
        });
    }
    async createKey(id, createKeyParams) {
        return this.apiCall(async (api) => {
            return await api.post(`/relayer-groups/${id}/keys`, createKeyParams);
        });
    }
    async listKeys(id) {
        return this.apiCall(async (api) => {
            return await api.get(`/relayer-groups/${id}/keys`);
        });
    }
    async deleteKey(id, keyId) {
        return this.apiCall(async (api) => {
            return await api.delete(`/relayer-groups/${id}/keys/${keyId}`);
        });
    }
}
exports.RelayGroupClient = RelayGroupClient;
